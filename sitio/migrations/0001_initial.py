# Generated by Django 5.1.1 on 2024-12-07 19:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='calendario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entrada', models.TimeField()),
                ('salida', models.TimeField()),
            ],
            options={
                'verbose_name': 'Calendario',
                'verbose_name_plural': 'Calendarios',
                'db_table': 'calendario',
            },
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fotoperfil', models.ImageField(blank=True, null=True, upload_to='fotos_perfil/', verbose_name='Foto')),
                ('fechanac', models.DateField(verbose_name='Fecha_Nacimiento')),
                ('verificacion', models.CharField(choices=[('0', 'No Verificado'), ('1', 'Verificado')], default='0', max_length=45, verbose_name='Verificacion')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfiles',
                'db_table': 'perfil',
            },
        ),
        migrations.CreateModel(
            name='horario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField()),
                ('id_calendario', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='sitio.calendario')),
                ('id_perfil', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='sitio.perfil')),
            ],
            options={
                'verbose_name': 'Horario',
                'verbose_name_plural': 'Horarios',
                'db_table': 'horario',
            },
        ),
        migrations.CreateModel(
            name='servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fotoprincipal', models.ImageField(blank=True, null=True, upload_to='fotos_services/', verbose_name='Foto_service')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('cate', models.CharField(choices=[('1', 'Fontanería'), ('2', 'Fotógrafo'), ('3', 'Niñera'), ('4', 'Contador'), ('5', 'Maestro en construcción'), ('6', 'Instalador de interiores'), ('7', 'Técnico eléctrico'), ('8', 'Técnico informático'), ('9', 'Entrenador de fútbol'), ('10', 'Profesor de matemáticas'), ('11', 'Gasfiter'), ('12', 'Plomero'), ('13', 'Carpintero'), ('14', 'Pintor profesional'), ('15', 'Jardinero'), ('16', 'Mecánico automotriz'), ('17', 'Diseñador gráfico'), ('18', 'Abogado'), ('19', 'Psicólogo'), ('20', 'Cocinero o chef a domicilio')], default='0', max_length=45, verbose_name='Categoria')),
                ('descripcion', models.CharField(max_length=500, verbose_name='Descripcion')),
                ('costo', models.CharField(max_length=10, verbose_name='Precio')),
                ('limite', models.PositiveIntegerField(default=5, verbose_name='Limites')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Servicio',
                'verbose_name_plural': 'Servicios',
                'db_table': 'servicio',
            },
        ),
        migrations.CreateModel(
            name='imagenes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.CharField(max_length=200, verbose_name='Foto')),
                ('id_servicio', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='sitio.servicio')),
            ],
            options={
                'verbose_name': 'Imagen',
                'verbose_name_plural': 'Imagenes',
                'db_table': 'imagenes',
            },
        ),
        migrations.CreateModel(
            name='estate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('0', 'Abierto'), ('1', 'En Progreso'), ('2', 'Cerrado')], default='0', max_length=100, verbose_name='Estado')),
                ('id_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('id_servicio', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='sitio.servicio')),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
                'db_table': 'estado',
            },
        ),
        migrations.CreateModel(
            name='comentario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comentario', models.CharField(max_length=500, verbose_name='Comentario')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='respuestas', to='sitio.comentario')),
                ('id_perfil', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='sitio.perfil')),
                ('id_servicio', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='sitio.servicio')),
            ],
            options={
                'verbose_name': 'Comentario',
                'verbose_name_plural': 'Comentarios',
                'db_table': 'comentario',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('estado', models.CharField(choices=[('0', 'Abierto'), ('1', 'En Progreso'), ('2', 'Cerrado')], default='0', max_length=20, verbose_name='Estado')),
                ('creado', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('actualizado', models.DateTimeField(auto_now=True, verbose_name='Última actualización')),
                ('servicio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets', to='sitio.servicio')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
                'db_table': 'ticket',
            },
        ),
        migrations.CreateModel(
            name='calificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.PositiveIntegerField(verbose_name='Porcentaje')),
                ('id_perfil', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='sitio.perfil')),
                ('id_servicio', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='sitio.servicio')),
            ],
            options={
                'verbose_name': 'Calificacion',
                'verbose_name_plural': 'Calificaciones',
                'db_table': 'calificacion',
                'unique_together': {('id_perfil', 'id_servicio')},
            },
        ),
    ]
